[tool.poetry]
name = "licitacao-backend"
version = "0.1.0"
description = "Sistema de Automação de Licitações - Backend"
authors = ["Sistema de Licitações <dev@licitacoes.com>"]

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.115.12"
uvicorn = {extras = ["standard"], version = "^0.34.2"}
sqlalchemy = {extras = ["asyncio"], version = "^2.0.41"}
asyncpg = "^0.30.0"
motor = "^3.7.1"
aioredis = "^2.0.1"
celery = {extras = ["redis"], version = "^5.5.2"}
pydantic = {extras = ["email"], version = "^2.11.5"}
pydantic-settings = "^2.9.1"
python-jose = {extras = ["cryptography"], version = "^3.5.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
python-multipart = "^0.0.20"
email-validator = "^2.2.0"
jinja2 = "^3.1.6"
python-dateutil = "^2.9.0.post0"
httpx = "^0.28.1"
websockets = "^15.0.1"
aiofiles = "^24.1.0"
reportlab = "^4.4.1"
pillow = "^11.2.1"
psutil = "^7.0.0"
alembic = "^1.16.1"
jsonschema = "^4.24.0"
matplotlib = "^3.10.3"
seaborn = "^0.13.2"
numpy = "^2.2.6"
pandas = "^2.2.3"
pytest = "^8.3.5"
aiohttp = "^3.12.4"
faker = "^37.3.0"
locust = "^2.37.6"


[tool.poetry.group.dev.dependencies]
pytest = "^8.3.5"
pytest-asyncio = "^1.0.0"
pytest-cov = "^6.1.1"
pytest-mock = "^3.14.1"
pytest-xdist = "^3.7.0"
pytest-benchmark = "^5.1.0"
black = "^25.1.0"
isort = "^6.0.1"
flake8 = "^7.2.0"
mypy = "^1.16.0"
pre-commit = "^4.2.0"
locust = "^2.37.6"
aiohttp = "^3.12.4"
faker = "^37.3.0"
matplotlib = "^3.10.3"
seaborn = "^0.13.2"
numpy = "^2.2.6"
pandas = "^2.2.3"
psutil = "^7.0.0"
httpx = "^0.28.1"
pytest-timeout = "^2.4.0"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-ra",
    "-v",
    "--cov=app",
    "--cov-report=html",
    "--cov-report=term-missing"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests", 
    "contract: API contract tests",
    "security: Security tests",
    "performance: Performance tests",
    "stress: Stress tests",
    "chaos: Chaos engineering tests",
    "e2e: End-to-end tests",
    "monitoring: Monitoring tests"
]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
